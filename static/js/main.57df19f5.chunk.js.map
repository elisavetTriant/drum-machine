{"version":3,"sources":["components/DrumPad.js","data/data.js","containers/DrumMachine.js","containers/Credits.js","App.js","reportWebVitals.js","index.js"],"names":["DrumPad","handleKeyDown","event","keyCode","props","padLetter","charCodeAt","audio","play","currentTime","handleDisplay","id","handleClick","document","addEventListener","this","removeEventListener","src","className","onClick","ref","React","Component","drumPadsInfo","type","DrumMachine","display","setState","state","map","pad","index","Credits","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yPA2CeA,E,4MA1BXC,cAAgB,SAACC,GACVA,EAAMC,UAAY,EAAKC,MAAMC,UAAUC,eACtC,EAAKC,MAAMC,OACX,EAAKD,MAAME,YAAc,EACzB,EAAKL,MAAMM,cAAc,EAAKN,MAAMO,M,EAI5CC,YAAc,WACV,EAAKL,MAAMC,OACX,EAAKD,MAAME,YAAc,EACzB,EAAKL,MAAMM,cAAc,EAAKN,MAAMO,K,kEAtBpCE,SAASC,iBAAiB,UAAWC,KAAKd,iB,6CAM1CY,SAASG,oBAAoB,UAAWD,KAAKd,iB,+BAoBvC,IAAD,SACwBc,KAAKX,MAA3BO,EADF,EACEA,GAAIM,EADN,EACMA,IAAKZ,EADX,EACWA,UAChB,OACI,sBAAKa,UAAU,WAAWP,GAAIA,EAAIQ,QAASJ,KAAKH,YAAhD,UACI,+BAAOP,IACP,uBAAOe,IAAK,SAAAA,GAAG,OAAI,EAAKb,MAAQa,GAAKF,UAAU,OAAOD,IAAKA,EAAKN,GAAIN,W,GAnC9DgB,IAAMC,WCUbC,EAZK,CAChB,CAAEZ,GAAI,YAAaN,UAAW,IAAKF,QAAS,GAAIc,IAAK,6DAA8DO,KAAM,aACzH,CAAEb,GAAI,SAAUN,UAAW,IAAKF,QAAS,GAAIc,IAAK,yDAA0DO,KAAM,aAClH,CAAEb,GAAI,UAAWN,UAAW,IAAKF,QAAS,GAAIc,IAAK,0DAA2DO,KAAM,aACpH,CAAEb,GAAI,cAAeN,UAAW,IAAKF,QAAS,GAAIc,IAAK,gEAAiEO,KAAM,aAC9H,CAAEb,GAAI,aAAcN,UAAW,IAAKF,QAAS,GAAIc,IAAK,+DAAgEO,KAAM,aAC5H,CAAEb,GAAI,WAAYN,UAAW,IAAKF,QAAS,GAAIc,IAAK,2DAA4DO,KAAM,aACtH,CAAEb,GAAI,UAAWN,UAAW,IAAKF,QAAS,GAAIc,IAAK,0DAA2DO,KAAM,aACpH,CAAEb,GAAI,WAAYN,UAAW,IAAKF,QAAS,GAAIc,IAAK,2DAA4DO,KAAM,aACtH,CAAEb,GAAI,WAAYN,UAAW,IAAKF,QAAS,GAAIc,IAAK,2DAA4DO,KAAM,cC2B3GC,E,kDA/BX,WAAYrB,GAAO,IAAD,8BACd,cAAMA,IAQVM,cAAiB,SAACgB,GAAD,OAAa,EAAKC,SAAS,CAAED,aAP1C,EAAKE,MAAQ,CACTF,QAAS,IAHC,E,qDAWT,IAAD,OAEJ,OACI,sBAAKf,GAAG,eAAR,UACI,8BACI,gDAEJ,qBAAKA,GAAG,UAAR,SACKI,KAAKa,MAAMF,UAEhB,qBAAKf,GAAG,YAAR,SACKY,EAAaM,KAAI,SAACC,EAAKC,GAAN,OACd,cAAC,EAAD,CAAqBpB,GAAImB,EAAInB,GAAIN,UAAWyB,EAAIzB,UAAWY,IAAKa,EAAIb,IAAKP,cAAiB,EAAKA,eAAjFqB,e,GAxBZV,IAAMC,WCQjBU,EATC,WACZ,OACI,sBAAKrB,GAAG,SAAR,UACI,8DAAgC,mBAAGsB,KAAM,iDAAT,+BAAhC,OACA,qEAAuC,mBAAGA,KAAM,qCAAT,6BAAvC,WCUGC,MAVf,WAEE,OACI,sBAAKhB,UAAW,UAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCAOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASkC,eAAe,SAM1BZ,M","file":"static/js/main.57df19f5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass DrumPad extends React.Component {\r\n\r\n    //method invoked immediately after component mounted using event listener\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown)\r\n        //window.focus()//set focus to the current window\r\n    }\r\n\r\n    //method for when component to be removed from DOM\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    //method to handle a key down event from keyboard - play HTML audio and change display\r\n    //no need to state actual keyCode\r\n    handleKeyDown = (event) => {\r\n        if(event.keyCode === this.props.padLetter.charCodeAt()) {\r\n            this.audio.play()\r\n            this.audio.currentTime = 0 //set time audio should play at (0 seconds)\r\n            this.props.handleDisplay(this.props.id)\r\n        }\r\n    }\r\n    //method to handle a click event on any of the 8 drum pads\r\n    handleClick = () => {\r\n        this.audio.play()\r\n        this.audio.currentTime = 0 //set time audio should play at (0 seconds)\r\n        this.props.handleDisplay(this.props.id)//changes value of parameter used in display function\r\n    }\r\n\r\n    //render letters on pads\r\n    render() {\r\n        const {id, src, padLetter} = this.props;\r\n        return(\r\n            <div className=\"drum-pad\" id={id} onClick={this.handleClick}>\r\n                <span>{padLetter}</span>\r\n                <audio ref={ref => this.audio = ref} className=\"clip\" src={src} id={padLetter}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DrumPad","const drumPadsInfo= [ //info of the nine required Drum Pads\r\n    { id: 'Kit & Hat', padLetter: 'Q', keyCode: 81, src: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3', type: 'audio/mp3' },\r\n    { id: 'Bld H1', padLetter: 'W', keyCode: 87, src: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3', type: 'audio/mp3' },\r\n    { id: 'Dry Ohh', padLetter: 'E', keyCode: 69, src: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3', type: 'audio/mp3' },\r\n    { id: 'Punchy Kick', padLetter: 'A', keyCode: 65, src: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3', type: 'audio/mp3' },\r\n    { id: 'Side Stick', padLetter: 'S', keyCode: 83, src: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3', type: 'audio/mp3' },\r\n    { id: 'Heater 1', padLetter: 'D', keyCode: 68, src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3', type: 'audio/mp3' },\r\n    { id: 'Brk Snr', padLetter: 'Z', keyCode: 90, src: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3', type: 'audio/mp3' },\r\n    { id: 'Heater 2', padLetter: 'X', keyCode: 88, src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3', type: 'audio/mp3' },\r\n    { id: 'Heater 3', padLetter: 'C', keyCode: 67, src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3', type: 'audio/mp3' },\r\n]\r\n\r\nexport default drumPadsInfo","import React from 'react'\r\nimport DrumPad from '../components/DrumPad';\r\nimport drumPadsInfo from '../data/data';\r\n\r\nclass DrumMachine extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            display: ''\r\n        }\r\n    }\r\n\r\n\r\n    //changes state of display according to value of this.props.id in handleClick method\r\n    handleDisplay  = (display) => this.setState({ display })\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div id=\"drum-machine\">\r\n                <div>\r\n                    <h1>Drum Machine</h1>\r\n                </div>\r\n                <div id=\"display\">\r\n                    {this.state.display}\r\n                </div>\r\n                <div id=\"drum-pads\">\r\n                    {drumPadsInfo.map((pad, index) => (\r\n                        <DrumPad key={index} id={pad.id} padLetter={pad.padLetter} src={pad.src} handleDisplay = {this.handleDisplay}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DrumMachine","import React from 'react';\r\n\r\n\r\nconst Credits = () => {\r\n    return (\r\n        <div id=\"footer\">\r\n            <p>Find the source code at this <a href={\"https://github.com/elisavetTriant/drum-machine\"}>GitHub repository</a>.</p>\r\n            <p>Made with love for FreeCodeCamp, by <a href={\"https://github.com/elisavetTriant/\"}>@ElisavetTriant</a>.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Credits;\r\n","import React from 'react';\nimport './App.css';\nimport './containers/DrumMachine'\nimport './containers/Credits'\nimport DrumMachine from \"./containers/DrumMachine\";\nimport Credits from \"./containers/Credits\";\n\nfunction App() {\n\n  return (\n      <div className={'wrapper'}>\n        <DrumMachine />\n        <Credits />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}